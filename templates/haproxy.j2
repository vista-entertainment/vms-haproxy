global
  #debug                                   # uncomment to enable debug mode for HAProxy
	log /dev/log    local0
	log /dev/log    local1 notice

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        # An alternative list with additional directives can be obtained from
        #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http
  
# Frontends
{% for tenant in tenants %}
	{% for backend in tenant.backends %}
		frontend {{ tenant.tenant }}_{{ backend.name }}
		bind {{backend.bind}}
		mode {{backend.mode}}
		
		{% if backend.pathprefix %}
		acl {{ tenant.tenant }}_{{ backend.name }}_path path_beg {{backend.pathprefix}}
		use_backend backend_{{ tenant.tenant }}_{{ backend.name }} if {{ tenant.tenant }}_{{ backend.name }}_path
		{% else %}
		default_backend backend_{{ tenant.tenant }}_{{ backend.name }}
		{% endif %}
	{% endfor %}
{% endfor %}

# Backends
{% for tenant in tenants %}
	{% for backend in tenant.backends %}
		backend backend_{{ tenant.tenant }}_{{ backend.name }}
			mode http
			{% for server in backend.servers %}
			server backend_{{ tenant.tenant }}_{{ backend.name }}_server{{loop.index}} {{server}}
			{% endfor %}
	{% endfor %}
{% endfor %}
  
